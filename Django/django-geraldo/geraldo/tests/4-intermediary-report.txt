AN INTERMEDIARY REPORT
======================

This is just a report with intermediary features: aggregation functions,
customized widget values and some stylized elements.

    >>> import os
    >>> cur_dir = os.path.dirname(os.path.abspath(__file__))

    >>> from django.contrib.auth.models import User

    >>> from reportlab.lib.pagesizes import A4
    >>> from reportlab.lib.units import cm
    >>> from reportlab.lib.enums import TA_CENTER, TA_JUSTIFY
    >>> from reportlab.lib.colors import navy, yellow, red
    
    >>> from geraldo import Report, ReportBand, Label, ObjectValue, SystemField,\
    ...     SYSTEM_REPORT_TITLE, FIELD_ACTION_COUNT, FIELD_ACTION_AVG, FIELD_ACTION_MIN,\
    ...     FIELD_ACTION_MAX, FIELD_ACTION_SUM, FIELD_ACTION_DISTINCT_COUNT, BAND_WIDTH,\
    ...     RoundRect, Line

Report class

    >>> class UsersReport(Report):
    ...     title = 'System users'
    ... 
    ...     class band_begin(ReportBand):
    ...         height = 1*cm
    ...         elements = [
    ...             Label(text="This is a <b>users</b> report.<br/>This time <i>our idea</i> is show"+\
    ...                        "some <font color=red>other features</font> of this reports engine", top=0.1*cm,
    ...                 left=0.1*cm, width=BAND_WIDTH),
    ...         ]
    ...         borders = {'all': RoundRect(radius=5, fillColor=yellow)}
    ... 
    ...     class band_summary(ReportBand):
    ...         height = 3.2*cm
    ...         elements = [
    ...             Label(text="Users count:", top=0.1*cm, left=0),
    ...             ObjectValue(attribute_name='username', top=0.1*cm, left=4*cm,\
    ...                 action=FIELD_ACTION_COUNT, display_format='%s permissions found'),
    ... 
    ...             Label(text="Users ids average:", top=0.6*cm, left=0),
    ...             ObjectValue(attribute_name='id', top=0.6*cm, left=4*cm, action=FIELD_ACTION_AVG),
    ... 
    ...             Label(text="Users ids minimum:", top=1.1*cm, left=0),
    ...             ObjectValue(attribute_name='id', top=1.1*cm, left=4*cm, action=FIELD_ACTION_MIN),
    ... 
    ...             Label(text="Users ids maximum:", top=1.6*cm, left=0),
    ...             ObjectValue(attribute_name='id', top=1.6*cm, left=4*cm, action=FIELD_ACTION_MAX),
    ... 
    ...             Label(text="Users ids sum:", top=2.1*cm, left=0),
    ...             ObjectValue(attribute_name='id', top=2.1*cm, left=4*cm, action=FIELD_ACTION_SUM),
    ... 
    ...             Label(text="Users first name distinct:", top=2.6*cm, left=0),
    ...             ObjectValue(attribute_name='first_name', top=2.6*cm, left=4*cm, action=FIELD_ACTION_DISTINCT_COUNT),
    ...         ]
    ...         borders = {'all': True}
    ... 
    ...     class band_page_header(ReportBand):
    ...         height = 1.3*cm
    ...         elements = [
    ...             SystemField(kind=SYSTEM_REPORT_TITLE, top=0.1*cm, left=0, width=BAND_WIDTH,
    ...                 style={'fontName': 'Helvetica-Bold', 'fontSize': 14, 'alignment': TA_CENTER,
    ...                     'textColor': navy}),
    ...             Label(text="ID", top=0.8*cm, left=0),
    ...             Label(text="Username", top=0.8*cm, left=3*cm),
    ...             Label(text="First name", top=0.8*cm, left=8*cm),
    ...             Label(text="Last name", top=0.8*cm, left=13*cm),
    ...             Label(text="Staff", top=0.8*cm, left=18*cm),
    ...         ]
    ...         borders = {'bottom': Line(strokeColor=red, stroke=3)}
    ... 
    ...     class band_page_footer(ReportBand):
    ...         height = 0.5*cm
    ...         elements = [
    ...             Label(text='Created with Geraldo Reports', top=0.1*cm,
    ...                 right=0),
    ...         ]
    ...         borders = {'top': Line(strokeColor=navy)}
    ... 
    ...     class band_detail(ReportBand):
    ...         height = 0.7*cm
    ...         elements = [
    ...             ObjectValue(attribute_name='id', top=0, left=0),
    ...             ObjectValue(attribute_name='username', top=0, left=3*cm, display_format='<font size=14 name=Helvetica>%s</font>'),
    ...             ObjectValue(attribute_name='first_name', top=0, left=8*cm),
    ...             ObjectValue(attribute_name='last_name', top=0, left=13*cm),
    ...             ObjectValue(attribute_name='is_staff', top=0, left=18*cm,
    ...                 get_value=lambda instance: instance.is_staff and 'Yes' or 'No'),
    ...         ]

    >>> queryset = User.objects.order_by('id')
    >>> queryset
    []

    >>> report = UsersReport(queryset=queryset)

PDF generation with empty queryset

    >>> from geraldo.generators import PDFGenerator

    >>> report.generate_by(PDFGenerator, filename=os.path.join(cur_dir, 'users-empty-report.pdf'))

Creating some users

    >>> len([User.objects.create(username='Leticia'),
    ... User.objects.create(username='Tarsila'),
    ... User.objects.create(username='Mychelle'),
    ... User.objects.create(username='Mychell'),
    ... User.objects.create(username='Marta'),
    ... User.objects.create(username='Davi'),
    ... User.objects.create(username='Verinha'),
    ... User.objects.create(username='Miltinho'),
    ... User.objects.create(username='Waltinho'),
    ... User.objects.create(username='Leni')])
    10

PDF common generation with users

    >>> report.queryset = User.objects.order_by('id')
    >>> report.generate_by(PDFGenerator, filename=os.path.join(cur_dir, 'users-report.pdf'))

Page with half height

    >>> report.page_size = (A4[0], A4[1] / 2)

    >>> report.generate_by(PDFGenerator, filename=os.path.join(cur_dir, 'users-report-half-height.pdf'))


